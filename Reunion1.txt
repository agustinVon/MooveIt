Behaviour model: ABM
Behaviour model: Persistance



class ABM::
HashMap collectionOfUsersStoredByNumbers
method registerUser(User aUser)
	save user in hashMap
	has to save this data in persistance, users have to be the same every time
	check if they already exists
	launch exeption when its already there
method setUserLocking(PhoneNumber aPhoneNumber,conditionToLockOrUnlock)
	search in hashmap user linked to user number.
	set lock or unlock user.-> throw exeption if is already in that condition	

class Administrator::
ABM abm
constructor (ABM thisABM)
	store atributes
method setUserLock(PhoneNumber aPhoneNuber)
	call setUserLocking in abm

class User::
PhoneNumber number
Constructor(PhoneNumber oneNumber)
	//have tverify in constructor if number has already been logged	
//create a persistance system
method rentAnActive(ActiveType,

Actives::	
constructor(ActiveType activeType)
	set atributes
method getActivoPints()
	return activo points in activo type


ActivesType::
int points
constructor(generatedPoints,name)
	set atributes

Zone::
constructor(zonaType)
method getFareMultiplier returns faremultipl

ZoneType:: Stores fares multiplier per minute

ActiveZone::

constructor(Zone oneZone,collection of starting actives)

